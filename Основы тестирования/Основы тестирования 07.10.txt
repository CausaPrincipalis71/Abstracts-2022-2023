Виды тестирования разделяются по признакам. Один и тот же признак может попадать под разные виды тестирования
Например, модульное тестирование может быть автоматизированным и/или изолированным. При этом оно будет оставаться модульным.
Типы изолированности:
1. Модульное - тестирование отдельной, мелкой функции
2. Интеграционное тестирование - взаимосвязь модулей между собой
3. Системное тестирование - проверка системы вцелом

Модульное -> Интеграционное -> Системное

Модульное тестирование не проверяет взаимосвязи с другими компонентами тестирования

Автоматизированное - замена человека на программу, повторяющую действия человека

Белый, серый, чёрный ящики.
Тестирования "Чёрного ящика" - код от тестировщика скрыт. Он просто взаимодействует с программой, при этом он не может видеть то, что происходит внутри программы.
"Белый ящик" - тестировщик имеет доступ к коду. Он видит структуру программы, модули, их соединения.
"Серый ящик" - симбиоз белого и чёрного. Что-то ограничено, а что-то он может посмотреть.

Если разработчик занимается тестированием, то он видит всё.
"Ящики" - это набор методов, они выбираются в зависимости от проекта

Нагрузочное (стресс) тестирование - какждый раз что-то повышается, и смотрим на то, как что-то будет работать в зависимости от нагрузки и следим за реакцией программы.
Стрессовое тестирование - не повышение нагрузки, а сразу граница нагрузки - резкое повышение до предела, или даже за допустимые пределы

Лабораторная работа:
Лабораторная работа разделена на 2 части. Первая часть подразумевает тестирования реальных объектов. Результаты тестирования нужно записать в таблицу 3.1.
Вторая часть задания прописана в теоритических обоснованиях. Нужно взять готовую задачу из первой лабораторной работы, или из курса "Основы программирования"
Для этих задач таблица 3.1 не подходит
В рамках лабораторной работы нужно выполнить действия не как тестировщик, а организатор, дающий предписания дальнейших действий
В каждой ячейке нужно написать - какую функциональность проверить, и какие шаги нужно сделать чтобы провести тестирования
Нюанс: не все виды тестирования могут быть неприменимы к объекту

